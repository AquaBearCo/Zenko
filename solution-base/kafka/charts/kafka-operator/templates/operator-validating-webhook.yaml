{{- if and (.Values.webhook.enabled) (.Values.webhook.certs.generate) -}}

{{- $commonName := printf "%s-operator.%s.svc" (include "kafka-operator.fullname" .) .Release.Namespace -}}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "kafka-operator.name" . }}-issuer
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "kafka-operator.name" . }}-cert
  namespace: {{ .Release.Namespace }}
spec:
  secretName: {{ .Values.webhook.certs.secret }}
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  dnsNames:
  - {{ $commonName }}
  - {{ printf "%s.cluster.local" $commonName }}
  issuerRef:
    name: {{ include "kafka-operator.name" . }}-issuer
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/name: {{ include "kafka-operator.name" . }}
    helm.sh/chart: {{ include "kafka-operator.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: webhook
  annotations:
    cert-manager.io/inject-ca-from: '{{ printf "%s/%s-cert" .Release.Namespace (include "kafka-operator.name" .) }}'
  name: {{ include "kafka-operator.name" . }}-validating-webhook
webhooks:
- clientConfig:
    service:
      name: "{{ include "kafka-operator.fullname" . }}-operator"
      namespace: {{ .Release.Namespace }}
      path: /validate
  failurePolicy: Fail
  name: kafkatopics.kafka.banzaicloud.io
  rules:
  - apiGroups:
    - kafka.banzaicloud.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - kafkatopics
{{- end -}}
